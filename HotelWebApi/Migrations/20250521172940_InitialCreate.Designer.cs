// <auto-generated />
using HotelWebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelWebApi.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250521172940_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelWebApi.Models.Persona", b =>
                {
                    b.Property<int>("DNI_Persona")
                        .HasMaxLength(8)
                        .HasColumnType("int");

                    b.Property<string>("Apellido_Persona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cod_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Persona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuariosCod_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("DNI_Persona");

                    b.HasIndex("UsuariosCod_Usuario");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("HotelWebApi.Models.PisoHabitaciones", b =>
                {
                    b.Property<string>("Cod_PisoHabitacion")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Codigo_Sucursal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado_TipoHabitacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_TipoHabitacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_PisoHabitacion")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("SucursalesCodigo_Sucursal")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("TipoHabitacionID_TipoHabitacion")
                        .HasColumnType("int");

                    b.HasKey("Cod_PisoHabitacion");

                    b.HasIndex("SucursalesCodigo_Sucursal");

                    b.HasIndex("TipoHabitacionID_TipoHabitacion");

                    b.ToTable("PisoHabitaciones");
                });

            modelBuilder.Entity("HotelWebApi.Models.Sucursales", b =>
                {
                    b.Property<string>("Codigo_Sucursal")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Nombre_Sucursal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pisos_Sucursal")
                        .HasColumnType("int");

                    b.HasKey("Codigo_Sucursal");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("HotelWebApi.Models.Sucursales_Usuarios", b =>
                {
                    b.Property<int>("Id_Sucursales_Usuarios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Sucursales_Usuarios"));

                    b.Property<string>("Cod_Usuario")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("Codigo_Sucursal")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<string>("SucursalesCodigo_Sucursal")
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("UsuariosCod_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id_Sucursales_Usuarios");

                    b.HasIndex("SucursalesCodigo_Sucursal");

                    b.HasIndex("UsuariosCod_Usuario");

                    b.ToTable("Sucursales_Usuarios");
                });

            modelBuilder.Entity("HotelWebApi.Models.TipoHabitacion", b =>
                {
                    b.Property<int>("ID_TipoHabitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_TipoHabitacion"));

                    b.Property<string>("Nombre_TipoHabitacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio_TipoHabitacion")
                        .HasColumnType("float");

                    b.HasKey("ID_TipoHabitacion");

                    b.ToTable("TipoHabitacion");
                });

            modelBuilder.Entity("HotelWebApi.Models.Usuarios", b =>
                {
                    b.Property<string>("Cod_Usuario")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Correo_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cod_Usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("HotelWebApi.Models.Persona", b =>
                {
                    b.HasOne("HotelWebApi.Models.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuariosCod_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("HotelWebApi.Models.PisoHabitaciones", b =>
                {
                    b.HasOne("HotelWebApi.Models.Sucursales", "Sucursales")
                        .WithMany()
                        .HasForeignKey("SucursalesCodigo_Sucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelWebApi.Models.TipoHabitacion", "TipoHabitacion")
                        .WithMany()
                        .HasForeignKey("TipoHabitacionID_TipoHabitacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sucursales");

                    b.Navigation("TipoHabitacion");
                });

            modelBuilder.Entity("HotelWebApi.Models.Sucursales_Usuarios", b =>
                {
                    b.HasOne("HotelWebApi.Models.Sucursales", "Sucursales")
                        .WithMany()
                        .HasForeignKey("SucursalesCodigo_Sucursal");

                    b.HasOne("HotelWebApi.Models.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuariosCod_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sucursales");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
